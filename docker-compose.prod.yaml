version: '3.8'

services:
  db:
    image: postgres:15-alpine
    restart: always
    env_file: .env
    volumes:
      - ./data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5

  server:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/med-store-backend:latest
    env_file: .env
    environment:
      NODE_ENV: ${NODE_ENV:-development}
    expose:
      - "8080"
    depends_on:
      db:
        condition: service_healthy

  client:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/med-store-frontend:latest
    env_file: .env
    restart: always
    environment:
      BACKEND_URL: http://server:8080
      NEXT_PUBLIC_BACKEND_URL: ""           # keep empty to use relative URLs in browser, or set to https://medix.com.ua
      NEXT_PUBLIC_DOMAIN_URL: https://medix.com.ua
    expose:
      - "3000"
    depends_on:
      - server

  nginx:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/med-store-nginx:latest
    depends_on:
      - client
    ports:
      - "80:80"
