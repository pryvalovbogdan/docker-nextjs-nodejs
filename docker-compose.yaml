version: '3.8'

services:
  db:
    image: postgres:15-alpine
    restart: always
    env_file: .env
    volumes:
      - ./data:/var/lib/postgresql/data   # Persistent database storage
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5

  server:
    build:
      context: ./back-end
      dockerfile: ${DOCKERFILE:-Dockerfile.dev}
    env_file: .env
    environment:
      NODE_ENV: ${NODE_ENV:-development}
    volumes:
      - ./back-end:/app
      - /app/node_modules
    ports:
      - "13000:3000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:13000/health || exit 1"]
      interval: 10s
      timeout: 30s
      retries: 5

  client:
    build:
      context: ./front-end
      dockerfile: ${DOCKERFILE:-Dockerfile.dev}
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://localhost:13000
    ports:
      - "3000:3000"
    depends_on:
      server:
        condition: service_healthy
    entrypoint: /bin/sh -c "until curl -s http://backend:13000/api/news; do echo 'Waiting for backend...'; sleep 5; done; yarn start"
