version: '3.8'

services:
  db:
    image: postgres:15-alpine
    restart: always
    env_file: .env
    volumes:
      - ./data:/var/lib/postgresql/data   # Persistent database storage
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5

  server:
    build:
      context: ./back-end
      dockerfile: ${DOCKERFILE:-Dockerfile.dev}
    env_file: .env
    environment:
      NODE_ENV: ${NODE_ENV:-development}
    volumes:
      - ./back-end:/app
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 3s
      retries: 2

  client:
    build:
      context: ./front-end
      dockerfile: ${DOCKERFILE:-Dockerfile.dev}
    env_file: .env
    environment:
      - NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}
    volumes:
      - ./front-end:/app
    ports:
      - "3000:3000"
    restart: always
    depends_on:
      server:
        condition: service_healthy

  nginx:
    build:
      context: ./nginx
    depends_on:
      - client
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./front-end/build:/usr/share/nginx/html
    restart: always