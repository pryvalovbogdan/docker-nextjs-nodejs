# Stage 1: Build Stage
FROM --platform=linux/amd64 node:18-alpine AS build

# Install bash and curl for compatibility
RUN apk add --no-cache bash curl

# Set the working directory
WORKDIR /app

# Copy package.json and yarn.lock first for caching dependencies
COPY package.json yarn.lock ./

# Install production and development dependencies
RUN yarn install --frozen-lockfile

# Copy the rest of the application code
COPY . .

# Build the project
RUN yarn build

# Stage 2: Production Image
FROM --platform=linux/amd64 node:18-alpine

# Install bash for script compatibility
RUN apk add --no-cache bash

# Set NODE_ENV to production
ENV NODE_ENV=production

# Set the working directory
WORKDIR /app

# Copy only the necessary files from the build stage
COPY --from=build /app/package.json /app/yarn.lock ./
COPY --from=build /app/dist ./dist
COPY --from=build /app/node_modules ./node_modules

# Expose the backend port
EXPOSE 8080

# Run database migrations and start the application
CMD ["sh", "-c", "yarn migration:prod && node dist/server.js"]
