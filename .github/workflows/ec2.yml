name: AWS-EC2 Instance CD

on:
  push:
    branches:
      - main

jobs:
  ec2-deploy:

    runs-on: ubuntu-latest
    steps:
      - name: Debug Secrets
        run: |
          echo "AWS Access Key: ${AWS_ACCESS_KEY_ID}"
          echo "AWS Secret Access Key: ${AWS_SECRET_ACCESS_KEY}"
          echo "AWS Region: ${AWS_REGION}"
          echo "Instance ID: ${AWS_INSTANCE_ID}"

      - name: AWS SSM Send-Command
        uses: peterkimzz/aws-ssm-send-command@v1.1.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          instance-ids: ${{ secrets.AWS_INSTANCE_ID }}
          # Command execution location
          # To check ur repo command: pwd
          # Example Output: /home/ubuntu
          working-directory: /home/ubuntu
          # Bash commands you want to execute
          command: |
            # Check if the .env file exists and delete it
            if [ -f .env ]; then
              echo ".env file exists. Deleting..."
              rm .env
            fi
            
            # Create the .env file and add all secrets
            cat <<EOT >> .env
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            PRIMARY_ADMIN_USERNAME=${{ secrets.PRIMARY_ADMIN_USERNAME }}
            PRIMARY_ADMIN_PASSWORD=${{ secrets.PRIMARY_ADMIN_PASSWORD }}
            PRIMARY_ADMIN_IP=${{ secrets.PRIMARY_ADMIN_IP }}
            EMAIL_USER=${{ secrets.EMAIL_USER }}
            EMAIL_RECIPIENT=${{ secrets.EMAIL_RECIPIENT }}
            EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            BACK_END_PORT=${{ secrets.BACK_END_PORT }}
            AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            EOT
            
            # Log in to ECR before pulling the Docker images
            aws ecr get-login-password --region $AWS_REGION | sudo docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
            
            # Pull the Docker images
            sudo docker-compose stop
            sudo docker-compose rm -f
            sudo docker-compose pull
            sudo docker-compose up -d
            sudo docker image prune -af
            
            # Remove the .env file for security
            echo "Removing .env file..."
            rm .env
          # Comment for Send-Command
          comment: docker-compose.yml file re-pulls newer versions of images and runs them on the instance.