# =========================
# default.conf (EC2 / Docker) — Next.js friendly + hardening
# =========================

# --- (Optional) If you sit behind ALB/ELB/CF, uncomment & set your proxy nets ---
# set_real_ip_from  10.0.0.0/8;
# real_ip_header    X-Forwarded-For;
# real_ip_recursive on;

# ---- INTERNAL TRAFFIC BYPASS ----
# Treat Docker/localhost as internal so we do NOT rate-limit our own SSR/API calls
geo $is_internal {
    default        0;
    127.0.0.1/32   1;
    172.16.0.0/12  1;   # Docker bridge
}

# Key used for rate/conn limiting; empty for internal -> disables limiting
map $is_internal $rl_key {
    1 "";
    0 $binary_remote_addr;
}

# ---- Rate-limit zones (http context) ----
# Separate budgets for pages and API
limit_req_zone  $rl_key  zone=page_limit:10m  rate=50r/s;
limit_req_zone  $rl_key  zone=api_limit:10m   rate=20r/s;

# ---- Concurrent connection limiting (per-IP) ----
limit_conn_zone $rl_key  zone=conn_limit:10m;

# ---- Bad bot/user-agent map (http context) ----
map $http_user_agent $bad_bot {
    default 0;
    "~*(zgrab|sqlmap|nikto|nessus|nmap|acunetix|wpscan|curl|wget|Go-http-client)" 1;
}

# ---- Optional: quieter logs for archive probes (http context) ----
map $status $zip_noise {
    ~^(403|404)$ 1;
    default 0;
}

# ---- Upstreams (Docker service names) ----
upstream client { server client:3000; keepalive 32; }
upstream server { server server:8080; keepalive 32; }

# ================= SERVER =================
server {
    listen 80;
    server_name _;

    # $from_cloudflare визначений у cloudflare-ips.conf (який автопідключено з conf.d)
    if ($from_cloudflare = 0) { return 403; }

    # Return 429 (Too Many Requests) on limiter hit
    limit_req_status 429;

    # Logs (Fail2Ban reads access.log)
    error_log  /var/log/nginx/error.log  warn;
    access_log /var/log/nginx/access.log combined;

    # ---- Gzip (safe defaults) ----
    gzip on; gzip_comp_level 5; gzip_min_length 256; gzip_proxied any;
    gzip_types application/javascript application/json application/xml application/xhtml+xml application/rss+xml text/css text/javascript text/plain image/svg+xml;

    # ---- Security headers ----
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # ---- Healthcheck ----
    location = /nginx-healthz { return 200; }

    # ---- Block obvious bad actors & probes ----
    if ($bad_bot) { return 403; }
    location ~* \.(php|phps|phtml|php5|php7|php8)$ { return 403; }
    location ~* /(wp-admin|wp-login|xmlrpc\.php|\.git|\.env|\.htaccess|shell.*|function\.php)$ { return 403; }

    # Block common archive/backup dumps
    location ~* \.(zip|tar|tgz|gz|7z|rar|sql|bak|backup)$ {
        access_log /var/log/nginx/access.log combined if=$zip_noise;
        return 404;
    }
    location ~* ^/(?:backup|dump|db|database|site|www|public|htdocs|wwwroot)\.zip$ {
        access_log /var/log/nginx/access.log combined if=$zip_noise;
        return 404;
    }

    # Block config/file-fishing & phpinfo
    location ~* ^/(?:config|private|api/config|appsettings\.[A-Za-z]+\.json|angular\.json|meteor\.settings\.json|hosting\.json|tsconfig(?:\.spec)?\.json|\.(?:local))$ {
        return 403;
    }
    if ($arg_phpinfo) { return 403; }

    # =========================
    # Next.js DEV/HMR EXEMPTIONS (no rate limit)
    # =========================
    location ~ ^/(?:__nextjs|__nextjs_original-stack-frame) {
        proxy_pass http://client; proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        expires off; add_header Cache-Control "no-store";
    }
    location ~ ^/_next/webpack-hmr {
        proxy_pass http://client; proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        expires off; add_header Cache-Control "no-store";
    }
    location ~ ^/_next/(?:data/|flight|trace) {
        proxy_pass http://client; proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        expires off; add_header Cache-Control "no-store";
    }

    # ---- STATIC ASSETS (no rate limit; cacheable) ----
    location ~* ^/(?:_next/static|_next/image|static|assets|images|img|fonts|media|favicon\.ico|robots\.txt|sitemap\.xml|companies-logos)/ {
        proxy_pass http://client; proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        expires 30d; add_header Cache-Control "public, max-age=2592000, immutable";
    }

    # ---- API (rate-limited for external only; also cap connections) ----
    location /api/ {
        limit_req  zone=api_limit  burst=200  delay=50;
        limit_conn conn_limit 40;

        proxy_pass http://server; proxy_http_version 1.1;

        # WebSockets / SSE
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
        proxy_cache_bypass $http_upgrade;
        client_max_body_size 50M;

        # CORS (adjust as needed)
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, Authorization, Content-Type, X-Requested-With";
        if ($request_method = OPTIONS) { return 204; }
    }

    # ---- FRONTEND PAGES (rate-limited for external only; cap connections) ----
    location / {
        limit_req  zone=page_limit  burst=120  delay=40;
        limit_conn conn_limit 40;

        proxy_pass http://client; proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        client_max_body_size 50M;
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
    }

    # ---- Error pages ----
    error_page 403 404 500 502 503 504 /50x.html;
    location = /50x.html { root /usr/share/nginx/html; }
}
