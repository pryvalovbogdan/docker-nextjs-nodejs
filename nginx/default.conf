# Define upstream services
upstream client {
    server client:3000;
}

upstream server {
    server server:8080;
}

server {
    listen 80;
    server_name _;

    # Default route to frontend (Next.js)
    location / {
        proxy_pass http://client;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        client_max_body_size 50M;
    }

    # API routes to backend
    location /api/ {
        proxy_pass http://server;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        client_max_body_size 50M;

        # CORS headers (if needed)
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, Authorization, Content-Type, X-Requested-With";

        if ($request_method = OPTIONS) {
            return 204;
        }
    }

    # Block access to suspicious PHP files
    location ~* \.php$ {
        return 403;
    }

    # Block known attack patterns and sensitive files
    location ~* /(wp-admin|wp-login|xmlrpc\.php|\.git|\.env|\.htaccess|shell.*\.php|function\.php) {
        return 403;
    }

    # Error pages
    error_page 403 404 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header X-XSS-Protection "1; mode=block" always;
}
