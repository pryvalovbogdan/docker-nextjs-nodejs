# =========================
# default.conf (EC2 / Docker)
# =========================

# ---- Global rate limit (http context) ----
# Throttle per-IP to 5 req/s (pages & API). Static assets are exempt below.
limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=5r/s;

# ---- Bad bot/user-agent map (http context) ----
# Expand this list as needed.
map $http_user_agent $bad_bot {
    default 0;
    "~*(zgrab|sqlmap|nikto|nessus|nmap|acunetix|wpscan|curl|wget)" 1;
}

# ---- Optional: tighten logs for common archive probes (http context) ----
# Set to 1 to log only 403/404 from the archive/sensitive blocks, or flip as desired.
map $status $zip_noise {
    ~^(403|404)$ 1;
    default 0;
}

# ---- Upstreams (Docker service names) ----
upstream client {
    server client:3000;
    keepalive 32;
}

upstream server {
    server server:8080;
    keepalive 32;
}

# ================= SERVER =================
server {
    listen 80;
    server_name _;

    # Prefer 429 (Too Many Requests) on rate-limit hit
    limit_req_status 429;

    # Logs
    error_log  /var/log/nginx/error.log  warn;
    access_log /var/log/nginx/access.log combined;

    # ---- Gzip (safe defaults) ----
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_types
        application/javascript
        application/json
        application/xml
        application/xhtml+xml
        application/rss+xml
        text/css
        text/javascript
        text/plain
        image/svg+xml;

    # ---- Security headers ----
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # ---- Healthcheck for Nginx container (optional) ----
    location = /nginx-healthz { return 200; }

    # ---- Block direct PHP & sensitive paths (bot probes) ----
    # Return fast before hitting the app
    if ($bad_bot) { return 403; }

    location ~* \.(php|phps|phtml|php5|php7|php8)$ { return 403; }
    location ~* /(wp-admin|wp-login|xmlrpc\.php|\.git|\.env|\.htaccess|shell.*|function\.php) { return 403; }

    # Block common archive/backup dumps (/.zip, .sql, etc.)
    location ~* \.(zip|tar|tgz|gz|7z|rar|sql|bak|backup)$ {
        access_log /var/log/nginx/access.log combined if=$zip_noise;
        return 404;
    }
    location ~* ^/(?:backup|dump|db|database|site|www|public|htdocs|wwwroot)\.zip$ {
        access_log /var/log/nginx/access.log combined if=$zip_noise;
        return 404;
    }

    # ---- STATIC ASSETS (no rate limit; cacheable) ----
    location ~* ^/(?:_next/static|_next/image|static|assets|images|img|fonts|media|favicon\.ico|robots\.txt|sitemap\.xml|companies-logos)/ {
        proxy_pass http://client;
        proxy_http_version 1.1;

        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # client-side caching
        expires 30d;
        add_header Cache-Control "public, max-age=2592000, immutable";
    }

    # ---- API (rate-limited) ----
    location /api/ {
        limit_req zone=req_limit_per_ip burst=20 nodelay;

        proxy_pass http://server;
        proxy_http_version 1.1;

        # WebSockets & upgrade headers (for SSE/ws if used)
        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        "upgrade";

        # Standard proxy headers
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts (tune to your API)
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;

        proxy_cache_bypass $http_upgrade;
        client_max_body_size 50M;

        # CORS (adjust origins/methods/headers to your needs)
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, Authorization, Content-Type, X-Requested-With";

        if ($request_method = OPTIONS) { return 204; }
    }

    # ---- FRONTEND PAGES (rate-limited) ----
    location / {
        limit_req zone=req_limit_per_ip burst=20 nodelay;

        proxy_pass http://client;
        proxy_http_version 1.1;

        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        client_max_body_size 50M;

        # Timeouts for SSR pages
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
    }

    # ---- Error pages ----
    error_page 403 404 500 502 503 504 /50x.html;
    location = /50x.html { root /usr/share/nginx/html; }
}


